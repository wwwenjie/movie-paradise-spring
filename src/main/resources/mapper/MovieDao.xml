<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="paradise.movie.app.dao.MovieDao">
  <resultMap id="BaseResultMap" type="paradise.movie.app.model.Movie">
    <constructor>
      <idArg column="_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="imdb_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="title_en" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="year" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="release" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="poster" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="path" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="info" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
      <arg column="rating" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
      <arg column="recs" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
      <arg column="trailers" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
      <arg column="backdrops" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    _id, imdb_id, title, title_en, `year`, `release`, poster, `path`, create_time, update_time, info, rating, recs, trailers, backdrops
  </sql>

  <select id="getToday" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `release` <![CDATA[ < ]]> now()
    ORDER BY `release` DESC
    LIMIT 500
  </select>

  <select id="getNewest" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `release` <![CDATA[ < ]]> now()
    ORDER BY `release` DESC
    LIMIT #{limit}
    OFFSET #{offset}
  </select>

  <select id="getComing" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `release` <![CDATA[ > ]]> now()
    ORDER BY `release` ASC
    LIMIT #{limit}
    OFFSET #{offset}
  </select>

  <select id="search" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `title` LIKE CONCAT('%',#{keyword},'%')
    LIMIT 15
  </select>

  <select id="findByPath" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `path` = #{path}
  </select>

  <select id="findByIds" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE _id IN
    <foreach collection="ids" item="_id" index="index" open="(" close=")" separator=",">
      #{_id}
    </foreach>
  </select>

  <select id="findByGenre" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE _id IN(
    SELECT t.id from(
    SELECT movie_id as id FROM movie_genre WHERE
    genre_id = (SELECT genre_id FROM genre WHERE name = #{genre})
    LIMIT #{limit}
    OFFSET #{offset}) AS t
    )
  </select>

  <select id="findByActor" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE _id IN(
    SELECT t.id from(
    SELECT movie_id as id FROM movie_actor WHERE
    actor_id = (SELECT actor_id FROM actor WHERE name = #{actor})
    LIMIT #{limit}
    OFFSET #{offset}) AS t
    )
  </select>
</mapper>