<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="paradise.movie.app.dao.MovieDao">
  <resultMap id="BaseResultMap" type="paradise.movie.app.model.Movie">
    <constructor>
      <idArg column="_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="imdb_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="title_en" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="year" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="release" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="poster" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="path" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
      <arg column="info" javaType="com.alibaba.fastjson.JSONObject" typeHandler="paradise.movie.app.util.JSONObjectHandler" jdbcType="LONGVARCHAR"/>
      <arg column="rating" javaType="com.alibaba.fastjson.JSONObject" typeHandler="paradise.movie.app.util.JSONObjectHandler" jdbcType="LONGVARCHAR"/>
      <arg column="recs" javaType="com.alibaba.fastjson.JSONArray" typeHandler="paradise.movie.app.util.JSONArrayHandler" jdbcType="LONGVARCHAR"/>
      <arg column="trailers" javaType="com.alibaba.fastjson.JSONArray" typeHandler="paradise.movie.app.util.JSONArrayHandler" jdbcType="LONGVARCHAR"/>
      <arg column="backdrops" javaType="com.alibaba.fastjson.JSONArray" typeHandler="paradise.movie.app.util.JSONArrayHandler" jdbcType="LONGVARCHAR"/>
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    _id, imdb_id, title, title_en, `year`, `release`, poster, `path`, create_time, update_time, info, rating, recs, trailers, backdrops
  </sql>

  <select id="getToday" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `release` <![CDATA[ < ]]> now()
    ORDER BY `release` DESC
    LIMIT 500
  </select>

  <select id="getNewest" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `release` <![CDATA[ < ]]> now()
    ORDER BY `release` DESC
    LIMIT #{limit}
    OFFSET #{offset}
  </select>

  <select id="getComing" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `release` <![CDATA[ > ]]> now()
    ORDER BY `release` ASC
    LIMIT #{limit}
    OFFSET #{offset}
  </select>

  <select id="search" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `title` LIKE CONCAT('%',#{keyword},'%')
    LIMIT 15
  </select>

  <select id="findByPath" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE `path` = #{path}
  </select>

  <select id="findByIds" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE _id IN
    <foreach collection="ids" item="_id" index="index" open="(" close=")" separator=",">
      #{_id}
    </foreach>
  </select>

  <select id="findByGenre" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE _id IN(
    SELECT t.id from(
    SELECT movie_id as id FROM movie_genre WHERE
    genre_id = (SELECT genre_id FROM genre WHERE name = #{genre})
    LIMIT #{limit}
    OFFSET #{offset}) AS t
    )
  </select>

  <select id="findByActor" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM movie
    WHERE _id IN(
    SELECT t.id from(
    SELECT movie_id as id FROM movie_actor WHERE
    actor_id = (SELECT actor_id FROM actor WHERE name = #{actor})
    LIMIT #{limit}
    OFFSET #{offset}) AS t
    )
  </select>

  <update id="update" parameterType="paradise.movie.app.model.Movie">
    update movie
    <set>
      <if test="imdbId != null">
        imdb_id = #{imdbId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="titleEn != null">
        title_en = #{titleEn,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        `year` = #{year,jdbcType=INTEGER},
      </if>
      <if test="release != null">
        `release` = #{release,jdbcType=TIMESTAMP},
      </if>
      <if test="poster != null">
        poster = #{poster,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=LONGVARCHAR,typeHandler=paradise.movie.app.util.JSONObejectHandler},
      </if>
      <if test="rating != null">
        rating = #{rating,jdbcType=LONGVARCHAR,typeHandler=paradise.movie.app.util.JSONObejectHandler},
      </if>
      <if test="recs != null">
        recs = #{recs,jdbcType=LONGVARCHAR,typeHandler=paradise.movie.app.util.JSONArrayHandler},
      </if>
      <if test="trailers != null">
        trailers = #{trailers,jdbcType=LONGVARCHAR,typeHandler=paradise.movie.app.util.JSONArrayHandler},
      </if>
      <if test="backdrops != null">
        backdrops = #{backdrops,jdbcType=LONGVARCHAR,typeHandler=paradise.movie.app.util.JSONArrayHandler},
      </if>
    </set>
    where _id = #{_id,jdbcType=INTEGER}
  </update>
</mapper>